[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/marker.png" type="Texture" id=1]
[ext_resource path="res://assets/boom.png" type="Texture" id=2]
[ext_resource path="res://assets/patriot.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var rng = RandomNumberGenerator.new()

const explode_delay = 1
const explode_start = 2
const explode_decay = 3
const explode_end = 4
const max_size = 0.8
const missile_speed = 15

var defend_color = Color(100, 0, 0)
var phase = 0
var boom_size = Vector2(0, 0)
var start_loc setget set_start
var end_loc = Vector2(0, 0)

var time = 0
var missile_dir = Vector2(0,0)


# Called when the node enters the scene tree for the first time.
func _ready():
	$Area2D/BoomContainer.scale = boom_size
	$Patriot.position = start_loc
	var velocity = start_loc.direction_to(end_loc)
	var angle = rad2deg(velocity.angle()) + 90
	$Patriot.set_rotation_degrees(angle)
	print(\"angle=\", angle, \"radians=\", deg2rad(angle))
	

# Called every frame. 'delta' is the elapsed time since the previous frame.
# Use this to size the explosion... 
func _process(delta):

	time += delta
	if phase == 0:
		move_missile()
	elif phase == 1:
		on_explode()
	elif phase == 2:
		if time < explode_decay:
			grow()
		else:
			shrink()
			
	if time > explode_end:
		on_end()


func on_explode():
	$Marker.visible = false
	$Area2D/BoomContainer/Boom.visible = true
	phase = 2

func grow():
	if boom_size.x < max_size:
		boom_size.x += .01
		boom_size.y += .01
		
	flicker()
	$Area2D/BoomContainer.scale = boom_size
	pass
	
func shrink():
	if boom_size.x > 0:
		boom_size.x -= .01
	if boom_size.y > 0:
		boom_size.y -= .01
	
	flicker()
	$Area2D/BoomContainer.scale = boom_size
	
func move_missile():
	var old_position = $Patriot.position
	var velocity = start_loc.direction_to(end_loc) * missile_speed
	var new_position = old_position + velocity
	
	$Patriot.position = new_position
	if new_position.y < end_loc.y:
		phase = 1
		$Patriot.visible = false
	
	
func flicker():
	var red = rng.randf_range(.8, 1)
	var blue = rng.randf_range(.7, 1)
	var green = blue
	var new_color = Color(red, green, blue)
	$Area2D/BoomContainer/Boom.self_modulate = new_color
	
func on_end():
	print(\"Spent\")
	get_parent().remove_child(self)
	
	
func set_start(new_value):
	start_loc = new_value - position
"

[sub_resource type="CircleShape2D" id=2]
radius = 11.0454

[node name="Missile" type="Node2D"]
script = SubResource( 1 )

[node name="Marker" type="Sprite" parent="."]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="Patriot" type="Sprite" parent="."]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="Area2D" type="Area2D" parent="."]

[node name="BoomContainer" type="CollisionShape2D" parent="Area2D"]
position = Vector2( -2, 1 )
shape = SubResource( 2 )

[node name="Boom" type="Sprite" parent="Area2D/BoomContainer"]
visible = false
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
