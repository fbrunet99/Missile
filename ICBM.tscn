[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/patriot.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "# ICBM Scene
extends Node2D

var Explode = preload(\"res://Explode.tscn\")

var rng = RandomNumberGenerator.new()

var targets setget set_targets

signal icbm_hit

const explode_start = 2
const explode_decay = 1.8
const explode_end = 2.7
const max_size = 0.5

var attack_color = Color(0, 0, 100)
var phase = 0
var start_loc = Vector2(0, 0)
var end_loc = Vector2(0, 0)
var cur_loc = null
var missile_speed = 2

var missile_dir = Vector2(0,0)


# Called when the node enters the scene tree for the first time.
func _ready():
	rng.randomize()
	if missile_speed == 0:
		missile_speed = 4
		
	var x = rng.randf_range(0, 1000)
	
	start_loc = Vector2(x, 0)
	end_loc = targets[randi() % targets.size()] # Random base or city location
	# end_loc = Vector2(rng.randf_range(0, 1000), 500) # Any random x value and y = 500

	$ICBMArea.position = start_loc
	var velocity = start_loc.direction_to(end_loc)
	var angle = rad2deg(velocity.angle()) + 90
	$ICBMArea.set_rotation_degrees(angle)
	$ICBMArea.connect(\"area_entered\", self, \"icbm_hit\")


# Called every frame. 'delta' is the elapsed time since the previous frame.
# Use this to size the explosion... 
func _process(delta):
	
	if phase == 0:
		move_missile()
	elif phase == 1:
		on_explode()

func _draw():
	if cur_loc != null && phase == 0:
		draw_line(start_loc, cur_loc, attack_color)


func on_explode():
	$ICBMArea/CollisionShape2D/Scud.visible = false
	
	var explode_instance = Explode.instance()
	explode_instance.position = $ICBMArea.position
	add_child(explode_instance)
	
	phase = 2
	
	explode_instance.connect(\"explode_end\", self, \"_on_icbm_explode\")
	update()

	
func move_missile():
	var old_position = $ICBMArea.position
	var velocity = start_loc.direction_to(end_loc) * missile_speed
	cur_loc = old_position + velocity
	
	$ICBMArea.position = cur_loc
	update()
	if cur_loc.y > end_loc.y:
		phase = 1

func icbm_hit(object):
	if phase == 0:
		phase = 1
		emit_signal(\"icbm_hit\")
		print(\"ICBM: I hit something\")
	
func _on_icbm_explode():
	on_end()

func on_end():
	print(\"ICBM: Ending\")
	queue_free()
#	get_parent().remove_child(self)
	
func set_targets(new_targets):
	targets = new_targets
	
func set_color(new_value):
	attack_color = new_value

func set_speed(new_value):
	missile_speed = new_value
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 2.73439, 12.8955 )

[node name="ICBM" type="Node2D"]
script = SubResource( 1 )

[node name="ICBMArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ICBMArea"]
position = Vector2( -0.118118, -0.833971 )
shape = SubResource( 2 )

[node name="Scud" type="Sprite" parent="ICBMArea/CollisionShape2D"]
position = Vector2( 0.118118, 0.833971 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 3 )
